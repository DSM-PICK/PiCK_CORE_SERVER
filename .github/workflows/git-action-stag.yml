name: gradle-pick-stag

on:
    push:
        branches: [ "develop" ]

jobs:
    build:
        permissions:
            id-token: write
            contents: read
        runs-on: ubuntu-latest
        services:
            redis:
                image: redis
                ports:
                    - 6379:6379

        steps:
            - uses: actions/checkout@v3

            - name: Set up Java
              uses: actions/setup-java@v2
              with:
                  java-version: '17'
                  distribution: 'temurin'

            - name: Build Gradle
              uses: gradle/gradle-build-action@v2
              with:
                  arguments: |
                      build
                      --build-cache
                      --no-daemon

            - name: Deploy to xquare
              uses: team-xquare/xquare-deployment-action@master
              with:
                  environment: stag
                  access_key: ${{ secrets.XQUARE_ACCESS_KEY }}
                  github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
                  buildargs: |
                      PROFILE=stag
                      JWT_SECRET_KEY=pickpickpickpickpickpickpickpick
                      JWT_ACCESS_EXP=9999999
                      JWT_REFRESH_EXP=36000000
                      JWT_HEADER=Authorization
                      JWT_PREFIX=Bearer
                      DB_URL=${{ secrets.STAG_DB_URL }}
                      DB_USERNAME=${{ secrets.DB_USERNAME }}
                      DB_PASSWORD=${{ secrets.DB_PASSWORD }}
                      REDIS_HOST=${{ secrets.REDIS_HOST }}
                      REDIS_PORT=${{ secrets.REDIS_PORT }}
                      DAE_URL=${{ secrets.DAE_URL }}
                      NEIS_URL=${{ secrets.NEIS_URL }}
                      DSM_LOGIN=${{ secrets.DSM_LOGIN }}
                      NEIS_KEY=${{ secrets.NEIS_KEY }}
                      WEBHOOK_STAG=${{ secrets.WEBHOOK_STAG }}
                      WEBHOOK_MESSAGE=${{ secrets.WEBHOOK_MESSAGE }}
                      AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}
                      AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}
                      AWS_BUCKET=${{ secrets.AWS_BUCKET }}
                      AWS_STATIC=${{ secrets.AWS_STATIC }}
                      FIREBASE_URL=${{ secrets.FIREBASE_URL }}

            - name: Discord Alert Success
              uses: sarisia/actions-status-discord@v1
              if: success()
              with:
                  webhook: ${{ secrets.DISCORD_STAG }}
                  description: "üéâ ÏÇ¨Ïù¥Ìä∏Í∞Ä Î∞∞Ìè¨ÎêòÏóàÏäµÎãàÎã§!"

            - name: Discord Alert Failure
              uses: sarisia/actions-status-discord@v1
              if: failure()
              with:
                  webhook: ${{ secrets.DISCORD_STAG }}
                  description: "üî• ÏÇ¨Ïù¥Ìä∏ Î∞∞Ìè¨Î•º Ïã§Ìå®ÌïòÏòÄÏäµÎãàÎã§."
